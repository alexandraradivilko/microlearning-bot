import json, os, re, datetime, random, requests, pytz, ydb, ydb.iam
from Repository import Repository
from MessageTemplateDto import MessageTemplateDto

# ---------------- CONFIG --------------------------------------------
TG_TOKEN = os.getenv("BOT_TOKEN")
URL = f"https://api.telegram.org/bot{TG_TOKEN}/"

driver = ydb.Driver(
    ydb.DriverConfig(
        endpoint=os.getenv("YDB_ENDPOINT"),
        database=os.getenv("YDB_DATABASE"),
        credentials=ydb.iam.MetadataUrlCredentials(),
    )
)
driver.wait(fail_fast=True, timeout=5)
repo = Repository(ydb.SessionPool(driver))
# --------------------------------------------------------------------

user_states: dict[int, str] = {}  # chat_id ‚Üí 'awaiting_time'

# ---------------- COMMANDS & BUTTONS --------------------------------
COMMANDS = {
    "/get_content": "üì• –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –≤—ã–∑–æ–≤ (—Ç–µ–æ—Ä–∏—è –∏–ª–∏ –∫–µ–π—Å –≤–Ω–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è)",
    "/scheduler_config": "‚è∞ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—Ö–æ–¥—è—Ç —Å–æ–æ–±—â–µ–Ω–∏—è",
    "/set_theme": "üéØ –í—ã–±—Ä–∞—Ç—å —Ç–µ–º—É –æ–±—É—á–µ–Ω–∏—è (–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑, –ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑, –ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç)",
    "/get_statistic": "üèÜ –ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–¥–æ—Å—Ç—É–ø–Ω–æ —Å –ø—è—Ç–Ω–∏—Ü—ã)",
    "/help": "üß≠ –ù–∞–ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ —è —É–º–µ—é",
}

BUTTON_TO_COMMAND = {
    "üéØ –ù–æ–≤—ã–π –≤—ã–∑–æ–≤": "/get_content",
    "üõ† –ö–æ–º–∞–Ω–¥—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏": "/help",
    "üïí –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è": "/scheduler_config",
    "üß† –í—ã–±—Ä–∞—Ç—å —Ç–µ–º—É": "/set_theme",
    "üèÜ –ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã": "/get_statistic",
}

THEMES = {
    "SYSTEM": "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑",
    "BUSINESS": "–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑",
    "MANAGEMENT": "–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç",
}

# –°–æ–æ–±—â–µ–Ω–∏—è-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–µ–º—ã
THEME_SET_RESPONSES = {
    "SYSTEM": (
        "üß† –û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –±—É–¥–µ–º –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å –º—ã—à–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–∞! "
        "–¢–µ–º–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: –°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑."
    ),
    "BUSINESS": (
        "üíº –ì–æ—Ç–æ–≤ –∫–æ–ø–∞—Ç—å –≥–ª—É–±–∂–µ? –¢–µ–ø–µ—Ä—å —Ñ–æ–∫—É—Å ‚Äî –ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑. "
        "–ë—É–¥–µ–º –∏—Å–∫–∞—Ç—å —Ü–µ–Ω–Ω–æ—Å—Ç—å, —É—Ç–æ—á–Ω—è—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å —Å–º—ã—Å–ª—ã."
    ),
    "MANAGEMENT": (
        "üìã –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ –∏ –ª—é–¥—å–º–∏ ‚Äî —Ç–µ–º–∞ ¬´–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç¬ª –∞–∫—Ç–∏–≤–Ω–∞. "
        "–õ–æ–≤–∏–º –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Ö–∞–æ—Å–æ–º –∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º!"
    ),
}

# –ü—Ä–æ—Ü–µ–Ω—Ç—ã, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–Ω–¥–æ–º–Ω–æ –±–µ—Ä—ë—Ç—Å—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
STAT_PERCENTS = [60, 62, 65, 68, 70]

# ---------------- helpers -------------------------------------------

def send_text(txt: str, chat_id: int):
    if isinstance(txt, bytes):
        txt = txt.decode()
    requests.get(URL + f"sendMessage?text={txt}&chat_id={chat_id}")


def create_inline_like() -> str:
    return json.dumps({
        "inline_keyboard": [
            [
                {"text": "–õ–∞–π–∫", "callback_data": "text_yes"},
                {"text": "–î–∏–∑–ª–∞–π–∫", "callback_data": "text_no"},
            ]
        ]
    })


def send_text_with_buttons(dto: MessageTemplateDto, chat_id: int):
    r = requests.post(
        URL + "sendMessage",
        data={
            "text": dto.get_content(),
            "chat_id": chat_id,
            "parse_mode": "Markdown",
            "reply_markup": create_inline_like(),
        },
    )
    mid = r.json().get("result", {}).get("message_id")
    if mid:
        repo.saveUserAnswers("user_answers", chat_id, mid, None, "sent", dto.get_id())
        repo.touch_user_activity(chat_id)

# ---------------- HANDLERS ------------------------------------------

def handle_start(chat_id: int):
    repo.createDefaultUserScheduleIfNotExists(chat_id)

    text = (
        "–ü—Ä–∏–≤–µ—Ç! üëã\n"
        "–Ø ‚Äî –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–±–µ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ —Ñ–æ—Ä–º–µ –∫–∞–∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É. "
        "–ú–æ—è —Ü–µ–ª—å ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ç–≤–æ—é –ø—Ä–∏–≤—ã—á–∫—É –∫ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—é —Å –ø–æ–º–æ—â—å—é –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø–æ–ª–µ–∑–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π.\n\n"
        "üìå –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 12:00 —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –Ω–µ–±–æ–ª—å—à—É—é —Ç–µ–æ—Ä–∏—é –∏–ª–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∫–µ–π—Å, "
        "—á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –±—ã—Å—Ç—Ä–æ –æ—Å–≤–µ–∂–∏—Ç—å –∑–Ω–∞–Ω–∏—è –∏–ª–∏ —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ.\n\n"
        "üß† –¢–µ–º—ã:\n"
        "‚Äî –°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑\n"
        "‚Äî –ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑\n"
        "‚Äî –ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç\n"
        "–ï—Å–ª–∏ –Ω–µ –≤—ã–±–µ—Ä–µ—à—å —Ç–µ–º—É ‚Äî —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–ª—É—á–∞–π–Ω—É—é.\n\n"
        "üõ† –¢—ã –º–æ–∂–µ—à—å:\n"
        "‚Äî –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        "‚Äî –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤—Ä—É—á–Ω—É—é\n"
        "‚Äî –í—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É —Ç–µ–º—É\n"
        "‚Äî –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ —É—Å–ø–µ—Ö–∏ –≤ –æ–±—â–µ–º —Ä–µ–π—Ç–∏–Ω–≥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å –ø—è—Ç–Ω–∏—Ü—ã)\n\n"
        "üëá –ù–∏–∂–µ ‚Äî –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º.\n"
        "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –ñ–º–∏ ¬´–ù–æ–≤—ã–π –≤—ã–∑–æ–≤¬ª ‚Äî –∏ –ø–æ–µ—Ö–∞–ª–∏ üöÄ"
    )
    kb = json.dumps({
        "keyboard": [
            [{"text": "üéØ –ù–æ–≤—ã–π –≤—ã–∑–æ–≤"}],
            [{"text": "üõ† –ö–æ–º–∞–Ω–¥—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"}],
            [{"text": "üïí –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è"}],
            [{"text": "üß† –í—ã–±—Ä–∞—Ç—å —Ç–µ–º—É"}],
            [{"text": "üèÜ –ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"}],
        ],
        "resize_keyboard": True,
    })
    requests.post(
        URL + "sendMessage",
        data={
            "text": text,
            "chat_id": chat_id,
            "reply_markup": kb,
            "parse_mode": "Markdown",
        },
    )


def handle_get_content(chat_id: int):
    theme = repo.get_user_theme(chat_id)
    dto = repo.findMessageTemplates(theme)
    if dto:
        send_text_with_buttons(dto, chat_id)
    else:
        send_text("–ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.", chat_id)


def handle_help(chat_id: int):
    send_text("\n".join(f"{c} ‚Äî {d}" for c, d in COMMANDS.items()), chat_id)


def handle_scheduler_config(chat_id: int, txt: str | None = None):
    if txt is None:
        user_states[chat_id] = "awaiting_time"
        send_text("‚è∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n\n"
"–ù–∞–ø–∏—à–∏, –≤–æ —Å–∫–æ–ª—å–∫–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è ‚Äî –≤ —Ñ–æ—Ä–º–∞—Ç–µ **HH:MM** (–ø–æ –ú–æ—Å–∫–≤–µ).\n"
"üìå –ü—Ä–∏–º–µ—Ä—ã:\n"
"‚Äî 09:15\n"
"‚Äî 20:45\n\n"
"–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å ‚Äî –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–æ –ø–æ–∑–∂–µ. –ñ–¥—É —Ç–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç üëá"
, chat_id)
        return
    if not re.fullmatch(r"(?:[01]\d|2[0-3]):[0-5]\d", txt):
        send_text("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä 08:30", chat_id)
        return
    repo.updateUserSchedule(chat_id, txt)
    user_states.pop(chat_id, None)
    send_text(f"–ì–æ—Ç–æ–≤–æ! –ë—É–¥—É —Å–ª–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –≤ {txt} (–ú–°–ö).", chat_id)


moscow_tz = pytz.timezone("Europe/Moscow")


def handle_get_statistic(chat_id: int):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–ø—Ç‚Äì–≤—Å) –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –µ—ë –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ (–ø–Ω‚Äì—á—Ç)."""
    weekday = datetime.datetime.now(moscow_tz).weekday()

    if weekday in (4, 5, 6):
        percent = random.choice(STAT_PERCENTS)
        text = (
            f"üèÜ –¢—ã –∞–∫—Ç–∏–≤–Ω–µ–µ, —á–µ–º {percent}% —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!\n"
            "–û—Ç–ª–∏—á–Ω—ã–π —Ä–∏—Ç–º! –¢—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—à—å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–≤—ã—á–∫—É –∫ –æ–±—É—á–µ–Ω–∏—é ‚Äî –∏ —ç—Ç–æ –≤–∏–¥–Ω–æ.\n\n"
            "üìö –î–∞–∂–µ 5 –º–∏–Ω—É—Ç —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è ‚Äî —ç—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–º –¥–Ω–µ.\n\n"
            "üöÄ –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ. –¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ —á–∏—Ç–∞–µ—à—å ‚Äî —Ç—ã —Ä–∞–∑–≤–∏–≤–∞–µ—à—å—Å—è. –ò —ç—Ç–æ –∑–∞–º–µ—á–∞—é—Ç."
        )
    else:
        text = (
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –µ—â—ë –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n"
            "–Ø —Ñ–æ—Ä–º–∏—Ä—É—é —Ä–µ–π—Ç–∏–Ω–≥ –∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É, —á—Ç–æ–±—ã —É—á–µ—Å—Ç—å –≤—Å—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –Ω–µ–¥–µ–ª—é.\n"
            "–ü–æ–∫–∞ –º–æ–∂–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å ‚Äî –∫–∞–∂–¥—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –º–∞—Ç—Ä–∏–∞–ª–∞, –∫–∞–∂–¥—ã–π –ª–∞–π–∫/–¥–∏–∑–ª–∞–π–∫ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ —Ç–æ–ø—É üí™\n"
            "‚ú® –ù–µ —Å–±–∞–≤–ª—è–π —Ç–µ–º–ø ‚Äî —Ç—ã —É–∂–µ –Ω–∞ –ø—É—Ç–∏ –∫ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç–∏!"
        )

    send_text(text, chat_id)


def handle_set_theme(chat_id: int):
    # –ö–∞–∂–¥—É—é —Ç–µ–º—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ —Å–≤–æ–µ–π —Å—Ç—Ä–æ–∫–µ, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –Ω–µ –æ–±—Ä–µ–∑–∞–ª—Å—è
    inline = {
        "inline_keyboard": [
            [{"text": THEMES["SYSTEM"], "callback_data": "theme_SYSTEM"}],
            [{"text": THEMES["BUSINESS"], "callback_data": "theme_BUSINESS"}],
            [{"text": THEMES["MANAGEMENT"], "callback_data": "theme_MANAGEMENT"}],
        ]
    }
    requests.post(
        URL + "sendMessage",
        data={
            "text": "üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã –æ–±—É—á–µ–Ω–∏—è\n"
"–í –º–æ—ë–º –∞—Ä—Å–µ–Ω–∞–ª–µ ‚Äî —Ç—Ä–∏ –∫–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã, –∫–∞–∂–¥–∞—è —Å —É–∫–ª–æ–Ω–æ–º –≤ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Å–∏—Å—Ç–µ–º:\n\n"
"    üß† –°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ ‚Äî –ø—Ä–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É, —Å–≤—è–∑–∏, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π\n\n"
"    üíº –ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑ ‚Äî –ø—Ä–æ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑—á–∏–∫–æ–≤, —Ü–µ–ª–∏, –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —Ü–µ–Ω–Ω–æ—Å—Ç—å\n\n"
"    üëî –ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç ‚Äî –ø—Ä–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, —Ä–æ–ª—è–º–∏ –∏ –æ–∂–∏–¥–∞–Ω–∏—è–º–∏\n\n"
"üìå –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —è –ø—Ä–∏—Å—ã–ª–∞—é –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –≤—Å–µ–º —Ç–µ–º–∞–º –≤–ø–µ—Ä–µ–º–µ—à–∫—É, —á—Ç–æ–±—ã –±—ã–ª–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ.\n"
"–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —á—ë–º-—Ç–æ –æ–¥–Ω–æ–º ‚Äî –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é —Ç–µ–º—É –Ω–∏–∂–µ.\n"
"–¢—ã —Å–º–æ–∂–µ—à—å —Å–º–µ–Ω–∏—Ç—å –µ—ë –ø–æ–∑–∂–µ, –Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ–∂–∏–º—É ‚Äú–≤—Å—ë —Å—Ä–∞–∑—É‚Äù –ø–æ–∫–∞ –Ω–µ–ª—å–∑—è (—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º!)\n\n"
"üëá –í—ã–±–µ—Ä–∏ —Ç–µ–º—É:",
            "chat_id": chat_id,
            "reply_markup": json.dumps(inline),
        },
    )


COMMAND_HANDLERS = {
    "/start": handle_start,
    "/get_content": handle_get_content,
    "/help": handle_help,
    "/scheduler_config": lambda cid: handle_scheduler_config(cid),
    "/get_statistic": handle_get_statistic,
    "/set_theme": handle_set_theme,
}

# ---------------- MAIN ----------------------------------------------

def handler(event, context):
    msg = json.loads(event["body"])

    # --- callback (inline) ---
    if "callback_query" in msg:
        cb = msg["callback_query"]
        chat_id = cb["message"]["chat"]["id"]
        mid = cb["message"]["message_id"]
        data = cb["data"]

        # –≤—ã–±–æ—Ä —Ç–µ–º—ã
        if data.startswith("theme_"):
            theme = data.split("_", 1)[1]  # SYSTEM / BUSINESS / MANAGEMENT
            repo.upsert_user_theme(chat_id, theme)
            send_text(THEME_SET_RESPONSES.get(theme, "–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞."), chat_id)
            return {"statusCode": 200}

        # –ª–∞–π–∫ / –¥–∏–∑–ª–∞–π–∫
        repo.saveUserAnswers("user_answers", chat_id, mid, data == "text_yes", "answered", None)
        repo.touch_user_activity(chat_id)
        send_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –ª–∞–π–∫!" if data == "text_yes" else "–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–∏–∑–ª–∞–π–∫!", chat_id)
        return {"statusCode": 200}

    # --- –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ---
    if "message" in msg and "text" in msg["message"]:
        chat_id = msg["message"]["chat"]["id"]
        text = msg["message"]["text"]

        # –æ–∂–∏–¥–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è /scheduler_config
        if user_states.get(chat_id) == "awaiting_time":
            handle_scheduler_config(chat_id, text)
            return {"statusCode": 200}

        # –∫–Ω–æ–ø–∫–∞ ‚Üí –∫–æ–º–∞–Ω–¥–∞, –∏–Ω–∞—á–µ —Ç–µ–∫—Å—Ç –∫–∞–∫ –µ—Å—Ç—å
        text = BUTTON_TO_COMMAND.get(text, text)
        fn = COMMAND_HANDLERS.get(text)
        fn(chat_id) if fn else send_text("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é", chat_id)
        return {"statusCode": 200}

    return {"statusCode": 200}
